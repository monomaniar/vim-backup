snippet     class
abbr        class Class(...): ...
prev_word   '^'
	class ${1:name}(${2:object}):
		def __init__(self, ${3}):
			${0}

snippet     classd
abbr        class Class(...): "..."
prev_word   '^'
	class ${1:name}(${2:object}):
		"""${3:class documentation}"""
		def __init__(self, ${4}):
			"""${5:__init__ documentation}"""
			${0}

snippet     def
abbr        def function(...): ...
prev_word   '^'
	def ${1:name}(${2}):
		${0}

snippet     defd
abbr        def function(...): """..."""
prev_word   '^'
	def ${1:name}(${2}):
		"""${3:function documentation}"""
		${0}

snippet     defm
abbr        def method(self, ...): ...
prev_word   '^'
	def ${1:name}(self, ${2}):
		${0}

snippet     defmd
abbr        def method(self, ...): "..."
prev_word   '^'
	def ${1:name}(self, ${2}):
		"""${3:method documentation}"""
		${0}

snippet     elif
abbr        elif ...: ...
prev_word   '^'
	elif ${1:condition}:
		${0}

snippet     else
abbr        else: ...
prev_word   '^'
	else:
		${0}

snippet     fileidiom
abbr        f = None try: f = open(...) finally: ...
prev_word   '^'
	${1:f} = None
	try:
		$1 = open(${2})
		${0}
	finally:
	if $1:
		$1.close()

snippet     for
abbr        for ... in ...: ...
prev_word   '^'
	for ${1:value} in ${2:list}:
		${0}

snippet     if
abbr        if ...: ...
prev_word   '^'
	if ${1:condition}:
		${0}

snippet     ifmain
abbr        if __name__ == '__main__': ...
prev_word   '^'
	if __name__ == '__main__':
		${0}

snippet     tryexcept
abbr        try: ... except ...: ...
prev_word   '^'
	try:
		${1}
	except ${2:ExceptionClass}:
		${3}

snippet     tryfinally
abbr        try: ... finally: ...
prev_word   '^'
	try:
		${1}
	finally:
		${2}

snippet     while
abbr        while ...: ...
prev_word   '^'
	while ${1:condition}:
		${0}

